import "dart:html" as AB;import "dart:collection" as nB;import "dart:isolate" as hD;import "dart:async" as VC;class ND{static const  OD="Chrome";static const  PD="Firefox";static const  QD="Internet Explorer";static const  RD="Safari";final  KD;final  minimumVersion;const ND(this.KD,[this.minimumVersion]);}class SD{final  name;const SD(this.name);}var FC='ambidextrous';var oB=FC.split("");var pB=uB(FC.replaceAll(new RegExp('.'),'-').split(""));var KB=uB(new List());var hB;final GB=new t();var qB=''; get WB{if(o){u(GB,k.m,'guessedletter');}return qB;}set WB( g){if(EB(GB)){l(GB,k.m,'guessedletter',qB,g);}qB=g;}var rB=false; get GC{if(o){u(GB,k.m,'dead');}return rB;}set GC( g){if(EB(GB)){l(GB,k.m,'dead',rB,g);}rB=g;}var sB=false; get HC{if(o){u(GB,k.m,'won');}return sB;}set HC( g){if(EB(GB)){l(GB,k.m,'won',sB,g);}sB=g;} WC(){aC();} XC(){const  g=7;if(oB.contains(WB)){YC();if(!pB.contains('-')){HC=true;}}else{ZC();KB.add(WB);if(KB.length==g){GC=true;}}WB='';} YC(){for(int g=0;g<oB.length;g++ ){if(oB[g]==WB){pB[g]=WB;}}} ZC(){var g=[[1,4,'0'],[2,3,'\/'],[2,4,'\|'],[2,5,'\\'],[3,4,'\|'],[4,3,'\/'],[4,5,'\\']];var h=g[KB.length][0];var i=g[KB.length][1];hB[h][i]=g[KB.length][2];} aC(){var h=['+---+  ','\|      ','\|      ','\|      ','\|      '];hB=new List(h.length);for(int g=0;g<h.length;g++ ){var i=h[g].split("");hB[g]=uB(i);}} bC(){var oD=AB.document.body;final pD=new AB.TableRowElement(),qD=new AB.Element.tag('td'),rD=new AB.InputElement(),sD=new AB.Element.html('<p>\n            <template></template>\n          </p>'),tD=new AB.Element.html('<p id="wrong">\n            <template></template>\n          </p>');var uD,vD,wD,xD,yD;var zD=new wB(oD);xD=oD.nodes[3].nodes[1].nodes[1];zD.TC(xD,()=>hB,(h,g,zD){var JB=h[g];var AE;AE=pD.clone(true);zD.TC(AE,()=>JB,(h,g,zD){var RB=h[g];var BE;BE=qD.clone(true);var CE=zD.AC(()=>RB,false);BE.nodes.add(CE);zD.addAll([new AB.Text('\n            '),BE,new AB.Text('\n          ')]);});zD.addAll([new AB.Text('\n          '),AE,new AB.Text('\n        ')]);});yD=oD.nodes[5].nodes[1];zD.loop(yD,()=>pB,(h,g,zD){var n=h[g];var DE=zD.AC(()=>n,false);zD.addAll([new AB.Text(' '),DE,new AB.Text(' ')]);});uD=oD.nodes[7].nodes[1];zD.lB(uD,()=>!GC&&!HC,(zD){var EE,FE,GE,HE,IE;GE=rD.clone(true);zD.listen(GE.onInput,(i){WB=GE.value;});zD.listen(GE.onKeyUp,(i){i=new AB.KeyEvent(i);XC();});zD.MD(()=>WB,(j){if(GE.value!=j)GE.value=j;},false,false);IE=sD.clone(true);HE=IE.nodes[1];zD.lB(HE,()=>KB.length!=0,(zD){zD.add(new AB.Text(' Sorry! The word contains no: '));});FE=tD.clone(true);EE=FE.nodes[1];zD.loop(EE,()=>KB,(h,g,zD){var w=h[g];var JE=zD.AC(()=>w,false);zD.addAll([new AB.Text(' '),JE,new AB.Text(' ')]);});zD.addAll([new AB.Text('\n          Guess a letter...\n          '),GE,new AB.Text('\n          '),IE,new AB.Text('\n          '),FE,new AB.Text('\n        ')]);});vD=oD.nodes[7].nodes[3];zD.lB(vD,()=>GC,(zD){zD.add(new AB.Text(' You\'re dead! '));});wD=oD.nodes[7].nodes[5];zD.lB(wD,()=>HC,(zD){zD.add(new AB.Text(' You Win! '));});zD.QB();zD.insert();}main(){MC=true;WC();bC();}class TD<LB> extends wC with t implements List<LB>{final  KE;TD([ g]):KE=g!=null?new List<LB>(g):<LB>[] ;factory TD.iD( g)=>new TD<LB>()..addAll(g); get length{if(o)u(this,k.m,'length');return KE.length;}set length( h){var i=KE.length;if(i==h)return;if(EB(this)){if(h<i){for(int g=i-1;g>=h;g-- ){l(this,k.NB,g,KE[g],null);}l(this,k.m,'length',i,h);}else{l(this,k.m,'length',i,h);for(int g=i;g<h;g++ ){l(this,k.MB,g,null,null);}}}KE.length=h;} operator[]( g){if(o)u(this,k.DB,g);return KE[g];}operator[]=( g, h){var i=KE[g];if(EB(this)){l(this,k.DB,g,i,h);}KE[g]=h;} add( h){var g=KE.length;if(EB(this)){l(this,k.m,'length',g,g+1);l(this,k.MB,g,null,h);}KE.add(h);} toString(){if(o){for(int g=0;g<length;g++ ){u(this,k.DB,g);}}return KE.toString();}}typedef  XB<s,q>();class SB<s,q> extends t implements Map<s,q>{final  LE;var ME;var NE;SB({ createMap}):LE=createMap!=null?createMap():new Map<s,q>(){ME=new cC<s,q>(this);NE=new dC<s,q>(this);}factory SB.jD( i,{ createMap}){var g=new SB<s,q>(createMap:createMap);i.forEach(( h, j){g[h]=j;});return g;} get keys=>ME; get values=>NE; get length{if(o)u(this,k.m,'length');return LE.length;} get isEmpty=>length==0; get isNotEmpty=>length!=0; OE( g)=>u(this,k.DB,g); PE(){u(this,k.m,'length');LE.keys.forEach(OE);} containsKey( g){if(o)OE(g);return LE.containsKey(g);} operator[]( g){if(o)OE(g);return LE[g];} operator[]=( h, g){var j=LE.length;var i=LE[h];LE[h]=g;if(EB(this)){if(j!=LE.length){l(this,k.m,'length',j,LE.length);l(this,k.MB,h,i,g);}else if(i!=g){l(this,k.DB,h,i,g);}}} putIfAbsent( g, j()){if(o)OE(g);var h=LE.length;var i=LE.putIfAbsent(g,j);if(EB(this)&&h!=LE.length){l(this,k.m,'length',h,LE.length);l(this,k.MB,g,null,i);}return i;} remove( g){if(o)OE(g);var h=LE.length;var i=LE.remove(g);if(EB(this)&&h!=LE.length){l(this,k.NB,g,i,null);l(this,k.m,'length',h,LE.length);}return i;} addAll( h)=>h.forEach((g,i){this[g]=i;}); clear(){var g=LE.length;if(EB(this)&&g>0){LE.forEach((i,h){l(this,k.NB,i,h,null);});l(this,k.m,'length',g,0);}LE.clear();} forEach( g( key, value)){if(o)PE();LE.forEach(g);} toString()=>nB.Maps.mapToString(this);}class cC<s,q> extends nB.IterableBase<s>{final  LE;cC(this.LE); get iterator=>new UD<s,q>(LE);}class UD<s,q> implements Iterator<s>{final  LE;final  ME;var QE=false;UD( g):LE=g,ME=g.LE.keys.iterator; moveNext(){if(o)u(LE,k.m,'length');return QE=ME.moveNext();} get current{var g=ME.current;if(o&&QE)LE.OE(g);return g;}}class dC<s,q> extends nB.IterableBase<q>{final  LE;dC(this.LE); get iterator=>new VD<s,q>(LE);}class VD<s,q> implements Iterator<q>{final  LE;final  ME;final  NE;var QE;VD( g):LE=g,ME=g.LE.keys.iterator,NE=g.LE.values.iterator; moveNext(){if(o)u(LE,k.m,'length');var h=ME.moveNext();var g=NE.moveNext();if(h!=g){throw new StateError('keys and values should be the same length');}return QE=g;} get current{if(o&&QE)LE.OE(ME.current);return NE.current;}}typedef  HB( e);typedef  eC( changes);typedef  IB();typedef  fC();class iB{final oldValue;final newValue;final  changes;iB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is iB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>sC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class k{static const m=1;static const DB=2;static const MB=DB|4;static const NB=DB|8;final  type;final key;final oldValue;final newValue;k(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is k&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>tC(type,key,oldValue,newValue); toString(){var g;switch (type){case m:g='field';break;case DB:g='index';break;case MB:g='insert';break;case NB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} gC(g, i,[ n]){if(g is t){var h=g;return tB(h,(w){i(new iB(h,h,w));});}var j=new jB(g,i,n);if(!j.RE()){return iC;}return j.SE;} tB( g, i){if(g.VB==null)g.VB=new vB();var h=g.VB.add(i);return h.remove;}uB(g){if(g is Map){var h=null;if(g is nB.SplayTreeMap){h=()=>new nB.SplayTreeMap();}else if(g is nB.LinkedHashMap){h=()=>new nB.LinkedHashMap();}return new SB.jD(g,createMap:h);}if(g is Set)return new JC.kD(g);if(g is Iterable)return new TD.iD(g);return g;}class t{var VB;var UB;final  hashCode= ++t.hC;static var hC=0;} EB( g)=>g.VB!=null&&g.VB.head!=null; get o=>TB!=null; u( g, h,i)=>TB.TE(g,h,i); l( g, j,n, h, i){if((j&(k.MB|k.NB))==0){if(h==i)return;}if(OB==null){OB=[] ;uC(jC);}if(g.UB==null){g.UB=[] ;OB.add(g);}g.UB.add(new k(j,n,h,i));} iC(){}var TB;var IC=100;var OB;var PB; jC(){var w=0;while (OB!=null||PB!=null){var j=OB;OB=null;var i=PB;PB=null;if(w++ ==IC){kC(j,i);return;}if(j!=null){for(var h in j){var RB=h.UB;h.UB=null;for(var g=h.VB.head;g!=null;g=g.next){var n=g.value;try {n(RB);}catch (EC,JB){YB(EC,JB,n,'from ${h}');}}}}if(i!=null){i.forEach((gD,DC){DC.UE();});}}} kC( n, j){var g=[] ;if(n!=null){for(var i in n){var RB=i.UB;g.add('${i} ${RB}');}}if(j!=null){for(var w in j.values){var h=w.UE();if(h!=null)g.add('${w} ${h}');}}OB=null;PB=null;var JB='exceeded notifiction limit of ${IC}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';nC(JB);}class jB{static var lC=0;final  VE= ++jB.lC;final  WE;final  XE;final  YE;final  ZE=new Map();final  aE=[] ;var bE=false;var cE;jB(this.WE,this.XE,this.YE); toString()=>YE!=null?'<observer ${VE}: ${YE}>':'<observer ${VE}>'; RE(){var h=TB;TB=this;try {cE=WE();if(cE is Iterable&&cE is !List&&cE is !t){cE=(cE as Iterable).toList();}}catch (g,i){YB(g,i,WE,'from ${this}');cE=null;}ZE.forEach(dE);ZE.clear();assert(TB==this);TB=h;eE();return aE.length>0;} fE( i){try {XE(i);}catch (g,h){YB(g,h,XE,'from ${this}');}} eE(){var g=cE;if(g is !t)return;aE.add(tB(g,(h){fE(new iB(g,g,h));}));} TE( w, JB,g){var i=ZE.putIfAbsent(w,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|JB;}catch (j,n){YB(j,n,g,'hashCode or operator == from ${this}');}} dE( i, j){aE.add(tB(i,(n){if(bE)return;for(var g in n){var h=j[g.key];if(h!=null&&(h&g.type)!=0){bE=true;if(PB==null){PB=new nB.SplayTreeMap();}PB[VE]=this;return;}}}));} SE(){for(var g in aE){g();}bE=false;} UE(){if(!bE)return null;var g=cE;SE();RE();try {if(g==cE)return null;}catch (i,j){YB(i,j,g,'operator == from ${this}');return null;}var h=new iB(g,cE);fE(h);return h;}}typedef  mC( message);var nC=(g)=>print(g);typedef  oC(error,stackTrace,obj, message);var YB=pC; pC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class JC<FB> extends vC with t implements Set<FB>{final  gE;final  hE;JC({ createMap}):gE=createMap!=null?createMap():new Map<FB,Object>(),hE=createMap;factory JC.kD( g,{ createMap}){return new JC<FB>(createMap:createMap)..addAll(g);} contains( g){if(o)u(this,k.DB,g);return gE.containsKey(g);} add( g){var h=gE.length;gE[g]=const Object();if(h!=gE.length){l(this,k.m,'length',h,gE.length);l(this,k.MB,g,null,g);}} remove( g){if(o)u(this,k.DB,g);var h=gE.length;gE.remove(g);if(h!=gE.length){if(EB(this)){l(this,k.NB,g,g,null);l(this,k.m,'length',h,gE.length);}return true;}return false;} clear(){if(EB(this)){for(var g in gE.keys){l(this,k.NB,g,g,null);}l(this,k.m,'length',gE.length,0);}gE.clear();} get length{if(o)u(this,k.m,'length');return gE.length;} get isEmpty=>length==0; get iterator=>new WD<FB>(this); addAll( g)=>g.forEach(add); toString(){if(o){for(FB g in gE.keys){u(this,k.DB,g);}}return gE.keys.toSet().toString();}}class WD<FB> implements Iterator<FB>{final  iE;final  jE;var kE=false;WD( g):iE=g,jE=g.gE.keys.iterator; moveNext(){iE.length;return kE=jE.moveNext();} get current{var g=jE.current;if(o&&kE)u(iE,k.DB,g);return g;}}class qC{}class rC{}class BB<CB>{var lE;var mE;var nE;var oE;BB.lD( g,this.nE):oE=g{if(nE!=null)nE.pE++ ;} get next=>mE; get value=>oE;set value( g)=>oE=g; qE( g, h){mE=h;lE=g;if(g!=null)g.mE=this;if(h!=null)h.lE=this;return this;} append( g)=>new BB<CB>.lD(g,nE).qE(this,mE); remove(){if(nE==null)return;nE.pE-- ;if(lE!=null){lE.mE=mE;}else{nE.rE=mE;}if(mE!=null){mE.lE=lE;}else{nE.sE=lE;}mE=null;lE=null;nE=null;}}class vB<CB> extends nB.IterableBase<CB>{var rE;var sE; get length=>pE;var pE=0;vB(){} get head=>rE; add( h){var g=new BB<CB>.lD(h,this);if(sE==null)return rE=sE=g;return sE=g.qE(sE,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new XD<CB>(this);}class XD<CB> implements Iterator<CB>{var tE;var nE;var uE;var vE=-1;XD(this.nE){tE=new List<BB>(nE.length);var h=0;var g=nE.head;while (g!=null){tE[h++ ]=g;g=g.next;}} get current=>uE; moveNext(){do{vE++ ;}while(vE<tE.length&&tE[vE].nE!=nE);if(vE<tE.length){uE=tE[vE].value;return true;}else{uE=null;return false;}}}ZB(h,g)=>h.hashCode*31+g.hashCode;sC(h,g,i)=>ZB(ZB(h,g),i);tC(g,i,h,j)=>ZB(ZB(g,i),ZB(h,j)); uC( h()){var g=new hD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}abstract class vC extends nB.IterableBase<dynamic>{}abstract class wC extends nB.ListMixin<dynamic>{} xC(i, g,[ h]){var j=i is qC;if(h==null){h=i.toString();}if(!j&&g is AB.Text){g.text=h;}else{var n=g;g=j?new AB.Element.html(h):new AB.Text(h);n.replaceWith(g);}return g;} yC(g){if(g is rC)return g.toString();g=g.toString();return AD(g)?g:'#';}const zC=const["http","https","ftp","mailto"]; AD( h){var g=Uri.parse(h).scheme;if(g=='')return true;return zC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class aB{ QB(){} insert(); remove();}class YD extends aB{final  RC;var wE;final  listener;YD(this.RC,this.listener); insert(){wE=RC.listen(listener);} remove(){wE.cancel();wE=null;}}class ZD extends aB{final exp;final  action;final  isFinal;var p;ZD(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new iB(null,exp()));}else if(p!=null){throw new StateError('binding already attached');}else{p=bB(exp,action,'generic-binding');}} remove(){if(!isFinal){p();p=null;}}}class aD extends aB{final  UC;final  CC;final  SC;final  isFinal;var p;aD(this.CC,this.UC,this.SC,this.isFinal); xE(g){UC(SC?yC(g):g);} insert(){if(isFinal){xE(CC());}else if(p!=null){throw new StateError('data binding already attached.');}else{p=bB(CC,(g)=>xE(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){p();p=null;}}}class wB extends aB{final  gB;final  children=[] ;final  nodes=[] ;wB(this.gB); listen( i, h){children.add(new YD(i,(g){h(g);FD();}));} AC( h,i){var g=new AB.Text('');children.add(new ZD(()=>'${h()}',(j){g=xC(h(),g,j.newValue);},i));return g;} MD(g,j,h,[i=false]){children.add(new aD(g,j,i,h));} lB( h,g,i){children.add(new CD(h,g,i));} loop( h,g,i){children.add(new bD(h,g,i));} TC( h,g,i){children.add(new cD(h,g,i));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); QB(){for(var g=0,h=children.length;g<h;g++ ){children[g].QB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}abstract class KC extends wB{final exp;var p;KC( g,this.exp):super(g); QB(){} insert(){super.QB();if(nodes.length>0){var i=gB.parentNode;var j=gB.nextNode;for(var g=0,h=nodes.length;g<h;g++ ){i.insertBefore(nodes[g],j);}}super.insert();} remove(){super.remove();for(var g=nodes.length-1;g>=0;g-- ){nodes[g].remove();}nodes.clear();}}typedef  BD( template);class CD extends KC{var mB=false;final  QC;CD( h,g,this.QC):super(h,g); insert(){p=bB(exp,(g){if(!mB&&g.newValue){QC(this);super.insert();mB=true;}else if(mB&&!g.newValue){super.remove();mB=false;}},'conditional-binding');} remove(){super.remove();p();p=null;}}typedef  LC( list, index, template);class bD extends KC{final  fB;bD( h,g,this.fB):super(h,g); insert(){p=bB(exp,(i){super.remove();var h=i.newValue;for(int g=0;g<h.length;g++ ){fB(h,g,this);}super.insert();},'loop-binding');} remove(){super.remove();p();p=null;}}class cD extends wB{final  fB;final exp;var p;cD( g,this.exp,this.fB):super(g); QB(){} insert(){p=bB(exp,(i){yE();var h=i.newValue;for(int g=0;g<h.length;g++ ){fB(h,g,this);}super.QB();gB.nodes.addAll(nodes);super.insert();},'loop-attribute-binding');} yE(){super.remove();gB.nodes.clear();nodes.clear();} remove(){yE();p();p=null;}}var MC=false; DD(g, w,[ n]){if(MC)return gC(g,w);if(w==null)return (){};if(cB==null)cB=new vB<dB>();var i;var h=v.JD;if(g is PC){i=(g as PC).zE;}else if(g is Function){i=g;try {var j=g();if(j is List){h=v.eB;}else if(j is Iterable){h=v.eB;i=()=>g().toList();}else if((j is nB.LinkedHashMap)||(j is nB.SplayTreeMap)){h=v.zB;}else if(j is Map){h=v.yB;}}catch (RB,DC){print('error: evaluating ${n!=null?n:"<unnamed>"} ' 'watcher threw error (${RB}, ${DC})');}}else if(g is List){i=()=>g;h=v.eB;}else if(g is Iterable){i=()=>g.toList();h=v.eB;}else if((g is nB.LinkedHashMap)||(g is nB.SplayTreeMap)){i=()=>g;h=v.zB;}else if(g is Map){i=()=>g;h=v.yB;}var JB=ED(h,i,w,n);var EC=cB.add(JB);return EC.remove;} ED( j, g, i, h){switch (j){case v.eB:return new dD(g,i,h);case v.zB:return new fD(g,i,h);case v.yB:return new eD(g,i,h);default:return new dB(g,i,h);}} bB(h,i,[j]){var n=DD(h,i,j);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new iB(null,g));return n;}var cB;class dB{final  BC;final  zE;final  AF;var BF;dB(this.zE,this.AF,this.BC){BF=zE();} toString()=>BC==null?'<unnamed>':BC; LD(){var g=CF();if(DF(g)){var h=BF;EF(g);AF(new iB(h,g));return true;}return false;} DF(g)=>BF!=g; EF(g){BF=g;}CF(){try {return zE();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return BF;}}final  NC=10; FD(){if(cB==null)return;var g;var h=0;do{g=false;for(var i in cB){if(i.LD()){g=true;}}}while(g&& ++h<NC);if(h==NC){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  OC<GD>();typedef  HD<GD>( value);class PC<GD>{}class dD<GD> extends dB{dD(g, i, h):super(g,i,h){EF(CF());} DF( g){return xB(BF,g);} EF(g){BF=new List<GD>.from(g);}}class eD<kB,ID> extends dB{eD(g, i, h):super(g,i,h){EF(CF());} DF( g){var i=BF.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(BF[h]!=g[h])return true;}return false;} EF(g){BF=new Map<kB,ID>.from(g);}}class fD<kB,ID> extends dB{fD(g, i, h):super(g,i,h){EF(CF());} DF( g){return xB(g.keys,BF.keys)||xB(g.values,BF.values);} EF(g){BF=new nB.LinkedHashMap.from(g);}} xB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class v{final FF;const v.mD(this.FF);toString()=>'Enum.${FF}';static const eB=const v.mD('LIST');static const yB=const v.mD('HASH_MAP');static const zB=const v.mD('ORDERED_MAP');static const JD=const v.mD('OTHER');}//@ sourceMappingURL=hangman.html_bootstrap.dart.map
