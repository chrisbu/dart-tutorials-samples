import "dart:async" as rB;import "dart:collection" as fB;import "dart:isolate" as sC;import "dart:html" as CB;class gC{static const  hC="Chrome";final  cC;final  minimumVersion;const gC(this.cC,[this.minimumVersion]);}class iC{final  name;const iC(this.name);}final RB=new l();var SB=''; get t{if(BC){CC(RB,u.TB,'shoutThis');}return SB;}set t( g){if(AC(RB)){DC(RB,u.TB,'shoutThis',SB,g);}SB=g;} sB(){} get tB=>t.toUpperCase(); get uB=>t+t.split('').reversed.join(); vB(){var wC=CB.document.body;var xC,yC,zC,AD,BD;var CD=new nC(wC);xC=wC.nodes[3];CD.listen(xC.onInput,(h){t=xC.value;});CD.fC(()=>t,(g){if(xC.value!=g)xC.value=g;},false,false);yC=wC.nodes[5];var DD=CD.QB(()=>t.length,false);yC.nodes.addAll([new CB.Text('      Length: '),DD,new CB.Text(' ')]);zC=wC.nodes[7];var ED=CD.QB(()=>tB,false);zC.nodes.addAll([new CB.Text('     Shouted: '),ED,new CB.Text(' ')]);AD=wC.nodes[9];var FD=CD.QB(()=>(t.length>=6)?t.substring(1,5):t.substring(0,0),false);AD.nodes.addAll([new CB.Text('   Substring: '),FD,new CB.Text(' ')]);BD=wC.nodes[11];var GD=CD.QB(()=>uB,false);BD.nodes.addAll([new CB.Text(' Palindromic: '),GD,new CB.Text(' ')]);CD.aB();CD.insert();}main(){jB=true;sB();vB();}typedef  q( e);typedef  wB( changes);typedef  v();typedef  xB();class NB{final oldValue;final newValue;final  changes;NB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is NB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>OC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class u{static const TB=1;static const UB=2;static const gB=UB|4;static const hB=UB|8;final  type;final key;final oldValue;final newValue;u(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is u&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>PC(type,key,oldValue,newValue); toString(){var g;switch (type){case TB:g='field';break;case UB:g='index';break;case gB:g='insert';break;case hB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} yB(g, i,[ k]){if(g is l){var h=g;return VB(h,(p){i(new NB(h,h,p));});}var j=new OB(g,i,k);if(!j.HD()){return EC;}return j.ID;} VB( g, i){if(g.FB==null)g.FB=new WB();var h=g.FB.add(i);return h.remove;}class l{var FB;var EB;final  hashCode= ++l.zB;static var zB=0;} AC( g)=>g.FB!=null&&g.FB.head!=null; get BC=>DB!=null; CC( g, h,i)=>DB.JD(g,h,i); DC( g, j,k, h, i){if((j&(u.gB|u.hB))==0){if(h==i)return;}if(w==null){w=[] ;QC(FC);}if(g.EB==null){g.EB=[] ;w.add(g);}g.EB.add(new u(j,k,h,i));} EC(){}var DB;var iB=100;var w;var AB; FC(){var p=0;while (w!=null||AB!=null){var j=w;w=null;var i=AB;AB=null;if(p++ ==iB){GC(j,i);return;}if(j!=null){for(var h in j){var MB=h.EB;h.EB=null;for(var g=h.FB.head;g!=null;g=g.next){var k=g.value;try {k(MB);}catch (eB,BB){GB(eB,BB,k,'from ${h}');}}}}if(i!=null){i.forEach((rC,dB){dB.KD();});}}} GC( k, j){var g=[] ;if(k!=null){for(var i in k){var MB=i.EB;g.add('${i} ${MB}');}}if(j!=null){for(var p in j.values){var h=p.KD();if(h!=null)g.add('${p} ${h}');}}w=null;AB=null;var BB='exceeded notifiction limit of ${iB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';JC(BB);}class OB{static var HC=0;final  LD= ++OB.HC;final  MD;final  ND;final  OD;final  PD=new Map();final  QD=[] ;var RD=false;var SD;OB(this.MD,this.ND,this.OD); toString()=>OD!=null?'<observer ${LD}: ${OD}>':'<observer ${LD}>'; HD(){var h=DB;DB=this;try {SD=MD();if(SD is Iterable&&SD is !List&&SD is !l){SD=(SD as Iterable).toList();}}catch (g,i){GB(g,i,MD,'from ${this}');SD=null;}PD.forEach(TD);PD.clear();assert(DB==this);DB=h;UD();return QD.length>0;} VD( i){try {ND(i);}catch (g,h){GB(g,h,ND,'from ${this}');}} UD(){var g=SD;if(g is !l)return;QD.add(VB(g,(h){VD(new NB(g,g,h));}));} JD( p, BB,g){var i=PD.putIfAbsent(p,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|BB;}catch (j,k){GB(j,k,g,'hashCode or operator == from ${this}');}} TD( i, j){QD.add(VB(i,(k){if(RD)return;for(var g in k){var h=j[g.key];if(h!=null&&(h&g.type)!=0){RD=true;if(AB==null){AB=new fB.SplayTreeMap();}AB[LD]=this;return;}}}));} ID(){for(var g in QD){g();}RD=false;} KD(){if(!RD)return null;var g=SD;ID();HD();try {if(g==SD)return null;}catch (i,j){GB(i,j,g,'operator == from ${this}');return null;}var h=new NB(g,SD);VD(h);return h;}}typedef  IC( message);var JC=(g)=>print(g);typedef  KC(error,stackTrace,obj, message);var GB=LC; LC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class MC{}class NC{}class n<o>{var WD;var XD;var YD;var ZD;n.tC( g,this.YD):ZD=g{if(YD!=null)YD.aD++ ;} get next=>XD; get value=>ZD;set value( g)=>ZD=g; bD( g, h){XD=h;WD=g;if(g!=null)g.XD=this;if(h!=null)h.WD=this;return this;} append( g)=>new n<o>.tC(g,YD).bD(this,XD); remove(){if(YD==null)return;YD.aD-- ;if(WD!=null){WD.XD=XD;}else{YD.cD=XD;}if(XD!=null){XD.WD=WD;}else{YD.dD=WD;}XD=null;WD=null;YD=null;}}class WB<o> extends fB.IterableBase<o>{var cD;var dD; get length=>aD;var aD=0;WB(){} get head=>cD; add( h){var g=new n<o>.tC(h,this);if(dD==null)return cD=dD=g;return dD=g.bD(dD,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new jC<o>(this);}class jC<o> implements Iterator<o>{var eD;var YD;var fD;var gD=-1;jC(this.YD){eD=new List<n>(YD.length);var h=0;var g=YD.head;while (g!=null){eD[h++ ]=g;g=g.next;}} get current=>fD; moveNext(){do{gD++ ;}while(gD<eD.length&&eD[gD].YD!=YD);if(gD<eD.length){fD=eD[gD].value;return true;}else{fD=null;return false;}}}HB(h,g)=>h.hashCode*31+g.hashCode;OC(h,g,i)=>HB(HB(h,g),i);PC(g,i,h,j)=>HB(HB(g,i),HB(h,j)); QC( h()){var g=new sC.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);} RC(i, g,[ h]){var j=i is MC;if(h==null){h=i.toString();}if(!j&&g is CB.Text){g.text=h;}else{var k=g;g=j?new CB.Element.html(h):new CB.Text(h);k.replaceWith(g);}return g;} SC(g){if(g is NC)return g.toString();g=g.toString();return UC(g)?g:'#';}const TC=const["http","https","ftp","mailto"]; UC( h){var g=Uri.parse(h).scheme;if(g=='')return true;return TC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class IB{ aB(){} insert(); remove();}class kC extends IB{final  oB;var hD;final  listener;kC(this.oB,this.listener); insert(){hD=oB.listen(listener);} remove(){hD.cancel();hD=null;}}class lC extends IB{final exp;final  action;final  isFinal;var s;lC(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new NB(null,exp()));}else if(s!=null){throw new StateError('binding already attached');}else{s=kB(exp,action,'generic-binding');}} remove(){if(!isFinal){s();s=null;}}}class mC extends IB{final  qB;final  cB;final  pB;final  isFinal;var s;mC(this.cB,this.qB,this.pB,this.isFinal); iD(g){qB(pB?SC(g):g);} insert(){if(isFinal){iD(cB());}else if(s!=null){throw new StateError('data binding already attached.');}else{s=kB(cB,(g)=>iD(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){s();s=null;}}}class nC extends IB{final  eC;final  children=[] ;final  nodes=[] ;nC(this.eC); listen( i, h){children.add(new kC(i,(g){h(g);XC();}));} QB( h,i){var g=new CB.Text('');children.add(new lC(()=>'${h()}',(j){g=RC(h(),g,j.newValue);},i));return g;} fC(g,j,h,[i=false]){children.add(new mC(g,j,i,h));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); aB(){for(var g=0,h=children.length;g<h;g++ ){children[g].aB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var jB=false; VC(g, p,[ k]){if(jB)return yB(g,p);if(p==null)return (){};if(JB==null)JB=new WB<KB>();var i;var h=m.bC;if(g is nB){i=(g as nB).jD;}else if(g is Function){i=g;try {var j=g();if(j is List){h=m.LB;}else if(j is Iterable){h=m.LB;i=()=>g().toList();}else if((j is fB.LinkedHashMap)||(j is fB.SplayTreeMap)){h=m.ZB;}else if(j is Map){h=m.YB;}}catch (MB,dB){print('error: evaluating ${k!=null?k:"<unnamed>"} ' 'watcher threw error (${MB}, ${dB})');}}else if(g is List){i=()=>g;h=m.LB;}else if(g is Iterable){i=()=>g.toList();h=m.LB;}else if((g is fB.LinkedHashMap)||(g is fB.SplayTreeMap)){i=()=>g;h=m.ZB;}else if(g is Map){i=()=>g;h=m.YB;}var BB=WC(h,i,p,k);var eB=JB.add(BB);return eB.remove;} WC( j, g, i, h){switch (j){case m.LB:return new oC(g,i,h);case m.ZB:return new qC(g,i,h);case m.YB:return new pC(g,i,h);default:return new KB(g,i,h);}} kB(h,i,[j]){var k=VC(h,i,j);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new NB(null,g));return k;}var JB;class KB{final  bB;final  jD;final  kD;var lD;KB(this.jD,this.kD,this.bB){lD=jD();} toString()=>bB==null?'<unnamed>':bB; dC(){var g=mD();if(nD(g)){var h=lD;oD(g);kD(new NB(h,g));return true;}return false;} nD(g)=>lD!=g; oD(g){lD=g;}mD(){try {return jD();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return lD;}}final  lB=10; XC(){if(JB==null)return;var g;var h=0;do{g=false;for(var i in JB){if(i.dC()){g=true;}}}while(g&& ++h<lB);if(h==lB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  mB<YC>();typedef  ZC<YC>( value);class nB<YC>{}class oC<YC> extends KB{oC(g, i, h):super(g,i,h){oD(mD());} nD( g){return XB(lD,g);} oD(g){lD=new List<YC>.from(g);}}class pC<PB,aC> extends KB{pC(g, i, h):super(g,i,h){oD(mD());} nD( g){var i=lD.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(lD[h]!=g[h])return true;}return false;} oD(g){lD=new Map<PB,aC>.from(g);}}class qC<PB,aC> extends KB{qC(g, i, h):super(g,i,h){oD(mD());} nD( g){return XB(g.keys,lD.keys)||XB(g.values,lD.values);} oD(g){lD=new fB.LinkedHashMap.from(g);}} XB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class m{final pD;const m.uC(this.pD);toString()=>'Enum.${pD}';static const LB=const m.uC('LIST');static const YB=const m.uC('HASH_MAP');static const ZB=const m.uC('ORDERED_MAP');static const bC=const m.uC('OTHER');}//@ sourceMappingURL=shout.html_bootstrap.dart.map
