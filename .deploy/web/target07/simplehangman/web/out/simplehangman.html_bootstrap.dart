import "dart:async" as SC;import "dart:collection" as kB;import "dart:isolate" as cD;import "dart:html" as FB;class JD{static const  KD="Chrome";static const  LD="Firefox";static const  MD="Internet Explorer";static const  ND="Safari";final  GD;final  minimumVersion;const JD(this.GD,[this.minimumVersion]);}class OD{final  name;const OD(this.name);}var AC='pumpernickel';var lB=AC.split("");var mB=DC(AC.replaceAll(new RegExp('.'),'-').split(""));var dB=DC(new List());final GB=new s();var nB=''; get TB{if(o){t(GB,k.m,'guessedletter');}return nB;}set TB( g){if(DB(GB)){l(GB,k.m,'guessedletter',nB,g);}nB=g;}var oB=false; get BC{if(o){t(GB,k.m,'dead');}return oB;}set BC( g){if(DB(GB)){l(GB,k.m,'dead',oB,g);}oB=g;}var pB=false; get CC{if(o){t(GB,k.m,'won');}return pB;}set CC( g){if(DB(GB)){l(GB,k.m,'won',pB,g);}pB=g;} TC(){} UC(){const  g=7;if(lB.contains(TB)){VC();if(!mB.contains('-')){CC=true;}}else{dB.add(TB);if(dB.length==g){BC=true;}}TB='';} VC(){for(int g=0;g<lB.length;g++ ){if(lB[g]==TB){mB[g]=TB;}}} WC(){var jD=FB.document.body;final kD=new FB.InputElement(),lD=new FB.Element.html('<p>\n              <template></template>\n            </p>'),mD=new FB.Element.html('<p id="wrong">\n              <template></template>\n            </p>');var nD,oD,pD,qD;var rD=new GC(jD);nD=jD.nodes[3].nodes[1];rD.loop(nD,()=>mB,(h,g,rD){var n=h[g];var sD=rD.NC(()=>n,false);rD.addAll([new FB.Text(' '),sD,new FB.Text(' ')]);});pD=jD.nodes[5].nodes[1];rD.iB(pD,()=>!BC&&!CC,(rD){var tD,uD,vD,wD,xD;tD=kD.clone(true);rD.listen(tD.onInput,(i){TB=tD.value;});rD.listen(tD.onKeyUp,(i){i=new FB.KeyEvent(i);UC();});rD.ID(()=>TB,(j){if(tD.value!=j)tD.value=j;},false,false);vD=lD.clone(true);uD=vD.nodes[1];rD.iB(uD,()=>dB.length!=0,(rD){rD.add(new FB.Text(' Sorry! The word contains no: '));});xD=mD.clone(true);wD=xD.nodes[1];rD.loop(wD,()=>dB,(h,g,rD){var w=h[g];var yD=rD.NC(()=>w,false);rD.addAll([new FB.Text(' '),yD,new FB.Text(' ')]);});rD.addAll([new FB.Text('\n            Guess a letter...\n            '),tD,new FB.Text('\n            '),vD,new FB.Text('\n            '),xD,new FB.Text('\n          ')]);});qD=jD.nodes[5].nodes[3];rD.iB(qD,()=>BC,(rD){rD.add(new FB.Text(' You\'re dead! '));});oD=jD.nodes[5].nodes[5];rD.iB(oD,()=>CC,(rD){rD.add(new FB.Text(' You Win! '));});rD.bB();rD.insert();}main(){IC=true;TC();WC();}class PD<JB> extends rC with s implements List<JB>{final  zD;PD([ g]):zD=g!=null?new List<JB>(g):<JB>[] ;factory PD.dD( g)=>new PD<JB>()..addAll(g); get length{if(o)t(this,k.m,'length');return zD.length;}set length( h){var i=zD.length;if(i==h)return;if(DB(this)){if(h<i){for(int g=i-1;g>=h;g-- ){l(this,k.LB,g,zD[g],null);}l(this,k.m,'length',i,h);}else{l(this,k.m,'length',i,h);for(int g=i;g<h;g++ ){l(this,k.KB,g,null,null);}}}zD.length=h;} operator[]( g){if(o)t(this,k.CB,g);return zD[g];}operator[]=( g, h){var i=zD[g];if(DB(this)){l(this,k.CB,g,i,h);}zD[g]=h;} add( h){var g=zD.length;if(DB(this)){l(this,k.m,'length',g,g+1);l(this,k.KB,g,null,h);}zD.add(h);} toString(){if(o){for(int g=0;g<length;g++ ){t(this,k.CB,g);}}return zD.toString();}}typedef  UB<q,p>();class PB<q,p> extends s implements Map<q,p>{final  AE;var BE;var CE;PB({ createMap}):AE=createMap!=null?createMap():new Map<q,p>(){BE=new XC<q,p>(this);CE=new YC<q,p>(this);}factory PB.eD( i,{ createMap}){var g=new PB<q,p>(createMap:createMap);i.forEach(( h, j){g[h]=j;});return g;} get keys=>BE; get values=>CE; get length{if(o)t(this,k.m,'length');return AE.length;} get isEmpty=>length==0; get isNotEmpty=>length!=0; DE( g)=>t(this,k.CB,g); EE(){t(this,k.m,'length');AE.keys.forEach(DE);} containsKey( g){if(o)DE(g);return AE.containsKey(g);} operator[]( g){if(o)DE(g);return AE[g];} operator[]=( h, g){var j=AE.length;var i=AE[h];AE[h]=g;if(DB(this)){if(j!=AE.length){l(this,k.m,'length',j,AE.length);l(this,k.KB,h,i,g);}else if(i!=g){l(this,k.CB,h,i,g);}}} putIfAbsent( g, j()){if(o)DE(g);var h=AE.length;var i=AE.putIfAbsent(g,j);if(DB(this)&&h!=AE.length){l(this,k.m,'length',h,AE.length);l(this,k.KB,g,null,i);}return i;} remove( g){if(o)DE(g);var h=AE.length;var i=AE.remove(g);if(DB(this)&&h!=AE.length){l(this,k.LB,g,i,null);l(this,k.m,'length',h,AE.length);}return i;} addAll( h)=>h.forEach((g,i){this[g]=i;}); clear(){var g=AE.length;if(DB(this)&&g>0){AE.forEach((i,h){l(this,k.LB,i,h,null);});l(this,k.m,'length',g,0);}AE.clear();} forEach( g( key, value)){if(o)EE();AE.forEach(g);} toString()=>kB.Maps.mapToString(this);}class XC<q,p> extends kB.IterableBase<q>{final  AE;XC(this.AE); get iterator=>new QD<q,p>(AE);}class QD<q,p> implements Iterator<q>{final  AE;final  BE;var FE=false;QD( g):AE=g,BE=g.AE.keys.iterator; moveNext(){if(o)t(AE,k.m,'length');return FE=BE.moveNext();} get current{var g=BE.current;if(o&&FE)AE.DE(g);return g;}}class YC<q,p> extends kB.IterableBase<p>{final  AE;YC(this.AE); get iterator=>new RD<q,p>(AE);}class RD<q,p> implements Iterator<p>{final  AE;final  BE;final  CE;var FE;RD( g):AE=g,BE=g.AE.keys.iterator,CE=g.AE.values.iterator; moveNext(){if(o)t(AE,k.m,'length');var h=BE.moveNext();var g=CE.moveNext();if(h!=g){throw new StateError('keys and values should be the same length');}return FE=g;} get current{if(o&&FE)AE.DE(BE.current);return CE.current;}}typedef  HB( e);typedef  ZC( changes);typedef  IB();typedef  aC();class eB{final oldValue;final newValue;final  changes;eB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is eB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>nC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class k{static const m=1;static const CB=2;static const KB=CB|4;static const LB=CB|8;final  type;final key;final oldValue;final newValue;k(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is k&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>oC(type,key,oldValue,newValue); toString(){var g;switch (type){case m:g='field';break;case CB:g='index';break;case KB:g='insert';break;case LB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} bC(g, i,[ n]){if(g is s){var h=g;return qB(h,(w){i(new eB(h,h,w));});}var j=new fB(g,i,n);if(!j.GE()){return dC;}return j.HE;} qB( g, i){if(g.SB==null)g.SB=new rB();var h=g.SB.add(i);return h.remove;}DC(g){if(g is Map){var h=null;if(g is kB.SplayTreeMap){h=()=>new kB.SplayTreeMap();}else if(g is kB.LinkedHashMap){h=()=>new kB.LinkedHashMap();}return new PB.eD(g,createMap:h);}if(g is Set)return new FC.fD(g);if(g is Iterable)return new PD.dD(g);return g;}class s{var SB;var RB;final  hashCode= ++s.cC;static var cC=0;} DB( g)=>g.SB!=null&&g.SB.head!=null; get o=>QB!=null; t( g, h,i)=>QB.IE(g,h,i); l( g, j,n, h, i){if((j&(k.KB|k.LB))==0){if(h==i)return;}if(MB==null){MB=[] ;pC(eC);}if(g.RB==null){g.RB=[] ;MB.add(g);}g.RB.add(new k(j,n,h,i));} dC(){}var QB;var EC=100;var MB;var NB; eC(){var w=0;while (MB!=null||NB!=null){var j=MB;MB=null;var i=NB;NB=null;if(w++ ==EC){fC(j,i);return;}if(j!=null){for(var h in j){var cB=h.RB;h.RB=null;for(var g=h.SB.head;g!=null;g=g.next){var n=g.value;try {n(cB);}catch (zB,OB){VB(zB,OB,n,'from ${h}');}}}}if(i!=null){i.forEach((bD,yB){yB.JE();});}}} fC( n, j){var g=[] ;if(n!=null){for(var i in n){var cB=i.RB;g.add('${i} ${cB}');}}if(j!=null){for(var w in j.values){var h=w.JE();if(h!=null)g.add('${w} ${h}');}}MB=null;NB=null;var OB='exceeded notifiction limit of ${EC}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';iC(OB);}class fB{static var gC=0;final  KE= ++fB.gC;final  LE;final  ME;final  NE;final  OE=new Map();final  PE=[] ;var QE=false;var RE;fB(this.LE,this.ME,this.NE); toString()=>NE!=null?'<observer ${KE}: ${NE}>':'<observer ${KE}>'; GE(){var h=QB;QB=this;try {RE=LE();if(RE is Iterable&&RE is !List&&RE is !s){RE=(RE as Iterable).toList();}}catch (g,i){VB(g,i,LE,'from ${this}');RE=null;}OE.forEach(SE);OE.clear();assert(QB==this);QB=h;TE();return PE.length>0;} UE( i){try {ME(i);}catch (g,h){VB(g,h,ME,'from ${this}');}} TE(){var g=RE;if(g is !s)return;PE.add(qB(g,(h){UE(new eB(g,g,h));}));} IE( w, OB,g){var i=OE.putIfAbsent(w,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|OB;}catch (j,n){VB(j,n,g,'hashCode or operator == from ${this}');}} SE( i, j){PE.add(qB(i,(n){if(QE)return;for(var g in n){var h=j[g.key];if(h!=null&&(h&g.type)!=0){QE=true;if(NB==null){NB=new kB.SplayTreeMap();}NB[KE]=this;return;}}}));} HE(){for(var g in PE){g();}QE=false;} JE(){if(!QE)return null;var g=RE;HE();GE();try {if(g==RE)return null;}catch (i,j){VB(i,j,g,'operator == from ${this}');return null;}var h=new eB(g,RE);UE(h);return h;}}typedef  hC( message);var iC=(g)=>print(g);typedef  jC(error,stackTrace,obj, message);var VB=kC; kC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class FC<EB> extends qC with s implements Set<EB>{final  VE;final  WE;FC({ createMap}):VE=createMap!=null?createMap():new Map<EB,Object>(),WE=createMap;factory FC.fD( g,{ createMap}){return new FC<EB>(createMap:createMap)..addAll(g);} contains( g){if(o)t(this,k.CB,g);return VE.containsKey(g);} add( g){var h=VE.length;VE[g]=const Object();if(h!=VE.length){l(this,k.m,'length',h,VE.length);l(this,k.KB,g,null,g);}} remove( g){if(o)t(this,k.CB,g);var h=VE.length;VE.remove(g);if(h!=VE.length){if(DB(this)){l(this,k.LB,g,g,null);l(this,k.m,'length',h,VE.length);}return true;}return false;} clear(){if(DB(this)){for(var g in VE.keys){l(this,k.LB,g,g,null);}l(this,k.m,'length',VE.length,0);}VE.clear();} get length{if(o)t(this,k.m,'length');return VE.length;} get isEmpty=>length==0; get iterator=>new SD<EB>(this); addAll( g)=>g.forEach(add); toString(){if(o){for(EB g in VE.keys){t(this,k.CB,g);}}return VE.keys.toSet().toString();}}class SD<EB> implements Iterator<EB>{final  XE;final  YE;var ZE=false;SD( g):XE=g,YE=g.VE.keys.iterator; moveNext(){XE.length;return ZE=YE.moveNext();} get current{var g=YE.current;if(o&&ZE)t(XE,k.CB,g);return g;}}class lC{}class mC{}class AB<BB>{var aE;var bE;var cE;var dE;AB.gD( g,this.cE):dE=g{if(cE!=null)cE.eE++ ;} get next=>bE; get value=>dE;set value( g)=>dE=g; fE( g, h){bE=h;aE=g;if(g!=null)g.bE=this;if(h!=null)h.aE=this;return this;} append( g)=>new AB<BB>.gD(g,cE).fE(this,bE); remove(){if(cE==null)return;cE.eE-- ;if(aE!=null){aE.bE=bE;}else{cE.gE=bE;}if(bE!=null){bE.aE=aE;}else{cE.hE=aE;}bE=null;aE=null;cE=null;}}class rB<BB> extends kB.IterableBase<BB>{var gE;var hE; get length=>eE;var eE=0;rB(){} get head=>gE; add( h){var g=new AB<BB>.gD(h,this);if(hE==null)return gE=hE=g;return hE=g.fE(hE,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new TD<BB>(this);}class TD<BB> implements Iterator<BB>{var iE;var cE;var jE;var kE=-1;TD(this.cE){iE=new List<AB>(cE.length);var h=0;var g=cE.head;while (g!=null){iE[h++ ]=g;g=g.next;}} get current=>jE; moveNext(){do{kE++ ;}while(kE<iE.length&&iE[kE].cE!=cE);if(kE<iE.length){jE=iE[kE].value;return true;}else{jE=null;return false;}}}WB(h,g)=>h.hashCode*31+g.hashCode;nC(h,g,i)=>WB(WB(h,g),i);oC(g,i,h,j)=>WB(WB(g,i),WB(h,j)); pC( h()){var g=new cD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}abstract class qC extends kB.IterableBase<dynamic>{}abstract class rC extends kB.ListMixin<dynamic>{} sC(i, g,[ h]){var j=i is lC;if(h==null){h=i.toString();}if(!j&&g is FB.Text){g.text=h;}else{var n=g;g=j?new FB.Element.html(h):new FB.Text(h);n.replaceWith(g);}return g;} tC(g){if(g is mC)return g.toString();g=g.toString();return vC(g)?g:'#';}const uC=const["http","https","ftp","mailto"]; vC( h){var g=Uri.parse(h).scheme;if(g=='')return true;return uC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class XB{ bB(){} insert(); remove();}class UD extends XB{final  OC;var lE;final  listener;UD(this.OC,this.listener); insert(){lE=OC.listen(listener);} remove(){lE.cancel();lE=null;}}class VD extends XB{final exp;final  action;final  isFinal;var u;VD(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new eB(null,exp()));}else if(u!=null){throw new StateError('binding already attached');}else{u=gB(exp,action,'generic-binding');}} remove(){if(!isFinal){u();u=null;}}}class WD extends XB{final  RC;final  wB;final  PC;final  isFinal;var u;WD(this.wB,this.RC,this.PC,this.isFinal); mE(g){RC(PC?tC(g):g);} insert(){if(isFinal){mE(wB());}else if(u!=null){throw new StateError('data binding already attached.');}else{u=gB(wB,(g)=>mE(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){u();u=null;}}}class GC extends XB{final  xB;final  children=[] ;final  nodes=[] ;GC(this.xB); listen( i, h){children.add(new UD(i,(g){h(g);BD();}));} NC( h,i){var g=new FB.Text('');children.add(new VD(()=>'${h()}',(j){g=sC(h(),g,j.newValue);},i));return g;} ID(g,j,h,[i=false]){children.add(new WD(g,j,i,h));} iB( h,g,i){children.add(new xC(h,g,i));} loop( h,g,i){children.add(new XD(h,g,i));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); bB(){for(var g=0,h=children.length;g<h;g++ ){children[g].bB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}abstract class HC extends GC{final exp;var u;HC( g,this.exp):super(g); bB(){} insert(){super.bB();if(nodes.length>0){var i=xB.parentNode;var j=xB.nextNode;for(var g=0,h=nodes.length;g<h;g++ ){i.insertBefore(nodes[g],j);}}super.insert();} remove(){super.remove();for(var g=nodes.length-1;g>=0;g-- ){nodes[g].remove();}nodes.clear();}}typedef  wC( template);class xC extends HC{var jB=false;final  MC;xC( h,g,this.MC):super(h,g); insert(){u=gB(exp,(g){if(!jB&&g.newValue){MC(this);super.insert();jB=true;}else if(jB&&!g.newValue){super.remove();jB=false;}},'conditional-binding');} remove(){super.remove();u();u=null;}}typedef  yC( list, index, template);class XD extends HC{final  QC;XD( h,g,this.QC):super(h,g); insert(){u=gB(exp,(i){super.remove();var h=i.newValue;for(int g=0;g<h.length;g++ ){QC(h,g,this);}super.insert();},'loop-binding');} remove(){super.remove();u();u=null;}}var IC=false; zC(g, w,[ n]){if(IC)return bC(g,w);if(w==null)return (){};if(YB==null)YB=new rB<ZB>();var i;var h=v.FD;if(g is LC){i=(g as LC).nE;}else if(g is Function){i=g;try {var j=g();if(j is List){h=v.aB;}else if(j is Iterable){h=v.aB;i=()=>g().toList();}else if((j is kB.LinkedHashMap)||(j is kB.SplayTreeMap)){h=v.uB;}else if(j is Map){h=v.tB;}}catch (cB,yB){print('error: evaluating ${n!=null?n:"<unnamed>"} ' 'watcher threw error (${cB}, ${yB})');}}else if(g is List){i=()=>g;h=v.aB;}else if(g is Iterable){i=()=>g.toList();h=v.aB;}else if((g is kB.LinkedHashMap)||(g is kB.SplayTreeMap)){i=()=>g;h=v.uB;}else if(g is Map){i=()=>g;h=v.tB;}var OB=AD(h,i,w,n);var zB=YB.add(OB);return zB.remove;} AD( j, g, i, h){switch (j){case v.aB:return new YD(g,i,h);case v.uB:return new aD(g,i,h);case v.tB:return new ZD(g,i,h);default:return new ZB(g,i,h);}} gB(h,i,[j]){var n=zC(h,i,j);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new eB(null,g));return n;}var YB;class ZB{final  vB;final  nE;final  oE;var pE;ZB(this.nE,this.oE,this.vB){pE=nE();} toString()=>vB==null?'<unnamed>':vB; HD(){var g=qE();if(rE(g)){var h=pE;sE(g);oE(new eB(h,g));return true;}return false;} rE(g)=>pE!=g; sE(g){pE=g;}qE(){try {return nE();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return pE;}}final  JC=10; BD(){if(YB==null)return;var g;var h=0;do{g=false;for(var i in YB){if(i.HD()){g=true;}}}while(g&& ++h<JC);if(h==JC){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  KC<CD>();typedef  DD<CD>( value);class LC<CD>{}class YD<CD> extends ZB{YD(g, i, h):super(g,i,h){sE(qE());} rE( g){return sB(pE,g);} sE(g){pE=new List<CD>.from(g);}}class ZD<hB,ED> extends ZB{ZD(g, i, h):super(g,i,h){sE(qE());} rE( g){var i=pE.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(pE[h]!=g[h])return true;}return false;} sE(g){pE=new Map<hB,ED>.from(g);}}class aD<hB,ED> extends ZB{aD(g, i, h):super(g,i,h){sE(qE());} rE( g){return sB(g.keys,pE.keys)||sB(g.values,pE.values);} sE(g){pE=new kB.LinkedHashMap.from(g);}} sB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class v{final tE;const v.hD(this.tE);toString()=>'Enum.${tE}';static const aB=const v.hD('LIST');static const tB=const v.hD('HASH_MAP');static const uB=const v.hD('ORDERED_MAP');static const FD=const v.hD('OTHER');}//@ sourceMappingURL=simplehangman.html_bootstrap.dart.map
